[
  //Pipe
  {
    _externalStream: {},
    fd: 3,
    writeQueueSize: 0,
    buffering: false,
    onread: [Function],
    sockets: { got: {}, send: {} }
  },
  //WriteStream
  {
    _connecting: false,
    _hadError: false,
    _handle:
     TTY {
       _externalStream: {},
       fd: 14,
       writeQueueSize: 0,
       owner: [Circular],
       onread: [Function: onread] },
    _parent: null,
    _host: null,
    _readableState:
     ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: [],
       length: 0,
       pipes: null,
       pipesCount: 0,
       flowing: null,
       ended: false,
       endEmitted: false,
       reading: false,
       sync: true,
       needReadable: false,
       emittedReadable: false,
       readableListening: false,
       defaultEncoding: 'utf8',
       ranOut: false,
       awaitDrain: 0,
       readingMore: false,
       decoder: null,
       encoding: null },
    readable: false,
    domain: null,
    _events:
     { end: [Object],
       finish: [Function: onSocketFinish],
       _socketEnd: [Function: onSocketEnd] },
    _eventsCount: 3,
    _maxListeners: undefined,
    _writableState:
     WritableState {
       objectMode: false,
       highWaterMark: 16384,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: true,
       bufferProcessing: false,
       onwrite: [Function],
       writecb: null,
       writelen: 0,
       bufferedRequest: null,
       lastBufferedRequest: null,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: false },
    writable: true,
    allowHalfOpen: false,
    destroyed: false,
    bytesRead: 0,
    _bytesDispatched: 0,
    _sockname: null,
    _writev: null,
    _pendingData: null,
    _pendingEncoding: '',
    columns: 127,
    rows: 25,
    _type: 'tty',
    fd: 2,
    _isStdio: true,
    destroySoon: [Function],
    destroy: [Function] },
  //Socket
  {
    _connecting: false,
    _hadError: false,
    _handle:
     TCP {
       _externalStream: {},
       fd: 17,
       reading: true,
       owner: [Circular],
       onread: [Function: onread],
       onconnection: null,
       writeQueueSize: 0 },
    _parent: null,
    _host: null,
    _readableState:
     ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: [],
       length: 0,
       pipes: null,
       pipesCount: 0,
       flowing: true,
       ended: false,
       endEmitted: false,
       reading: true,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: false,
       defaultEncoding: 'utf8',
       ranOut: false,
       awaitDrain: 0,
       readingMore: false,
       decoder: null,
       encoding: null,
       resumeScheduled: false },
    readable: true,
    domain: null,
    _events:
     { end: [Object],
       finish: [Function: onSocketFinish],
       _socketEnd: [Function: onSocketEnd],
       connect: [Object],
       data: [Function],
       error: [Function],
       close: [Function],
       drain: [Function] },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState:
     WritableState {
       objectMode: false,
       highWaterMark: 16384,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: false,
       bufferProcessing: false,
       onwrite: [Function],
       writecb: null,
       writelen: 0,
       bufferedRequest: null,
       lastBufferedRequest: null,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: false },
    writable: true,
    allowHalfOpen: false,
    destroyed: false,
    bytesRead: 1982,
    _bytesDispatched: 93,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    read: [Function],
    _consuming: true,
    _idleNext: null,
    _idlePrev: null,
    _idleTimeout: -1 },
  //Timer 
  {
    '0': [Function: listOnTimeout],
    _idleNext: [Circular],
    _idlePrev: [Circular],
    msecs: 10000 } ]
